// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GlobalTableSpec defines the desired state of GlobalTable.
//
// Represents the properties of a global table.
type GlobalTableSpec struct {

	// The global table name.
	// +kubebuilder:validation:Required
	GlobalTableName *string `json:"globalTableName"`
	// The Regions where the global table needs to be created.
	// +kubebuilder:validation:Required
	ReplicationGroup []*Replica `json:"replicationGroup"`
}

// GlobalTableStatus defines the observed state of GlobalTable
type GlobalTableStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The creation time of the global table.
	// +kubebuilder:validation:Optional
	CreationDateTime *metav1.Time `json:"creationDateTime,omitempty"`
	// The current state of the global table:
	//
	//    * CREATING - The global table is being created.
	//
	//    * UPDATING - The global table is being updated.
	//
	//    * DELETING - The global table is being deleted.
	//
	//    * ACTIVE - The global table is ready for use.
	// +kubebuilder:validation:Optional
	GlobalTableStatus *string `json:"globalTableStatus,omitempty"`
}

// GlobalTable is the Schema for the GlobalTables API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type GlobalTable struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GlobalTableSpec   `json:"spec,omitempty"`
	Status            GlobalTableStatus `json:"status,omitempty"`
}

// GlobalTableList contains a list of GlobalTable
// +kubebuilder:object:root=true
type GlobalTableList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GlobalTable `json:"items"`
}

func init() {
	SchemeBuilder.Register(&GlobalTable{}, &GlobalTableList{})
}
